
# Optimized Solution: Matrix Rotation 90 Degrees 


## Problem Description:
Given an `n x n` matrix, the goal is to rotate the matrix 90 degrees clockwise in place. The rotation should be done without using extra space (other than a few variables) and while maintaining the original matrix.

## Approach:

### 1. Transpose the Matrix:
- First, we swap the elements across the main diagonal. This step converts rows into columns.
- For an element at position `(i, j)`, we swap it with the element at `(j, i)`.

### 2. Reverse Each Row:
- After transposing the matrix, the next step is to reverse each row. Reversing the rows will complete the 90-degree clockwise rotation.

### Why This Works:
- Transposing the matrix swaps rows with columns, and reversing each row in the transposed matrix moves the columns into their new positions, achieving the desired rotated matrix.

### Time Complexity:
- **Time Complexity**: `O(n^2)`
  - The first step (transposing the matrix) involves iterating over the upper triangular part of the matrix. The second step (reversing each row) involves iterating over each row. Both steps require `O(n^2)` operations, so the total time complexity is `O(n^2)`.

### Space Complexity:
- **Space Complexity**: `O(1)`
  - This is an in-place solution, meaning no additional space is used other than a few variables for swapping. Thus, the space complexity is constant.

---

